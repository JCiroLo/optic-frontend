[{"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\index.js":"1","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\App.js":"2","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\TestGlasses.js":"4","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Home.js":"5","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Mounts.js":"6","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\useEventListener.js":"7","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Management.js":"8","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Consts.js":"9","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Actions.js":"10","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Footer.js":"11","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Catalogue.js":"12"},{"size":231,"mtime":1615502763916,"results":"13","hashOfConfig":"14"},{"size":1039,"mtime":1614973459903,"results":"15","hashOfConfig":"14"},{"size":1991,"mtime":1614954620266,"results":"16","hashOfConfig":"14"},{"size":12075,"mtime":1612895488689,"results":"17","hashOfConfig":"14"},{"size":4661,"mtime":1615502913029,"results":"18","hashOfConfig":"14"},{"size":2496,"mtime":1612725579276,"results":"19","hashOfConfig":"14"},{"size":728,"mtime":1611271075697,"results":"20","hashOfConfig":"14"},{"size":12263,"mtime":1613945977908,"results":"21","hashOfConfig":"14"},{"size":51,"mtime":1611945285396,"results":"22","hashOfConfig":"14"},{"size":959,"mtime":1612122697553,"results":"23","hashOfConfig":"14"},{"size":4958,"mtime":1613936067956,"results":"24","hashOfConfig":"14"},{"size":3363,"mtime":1614973153609,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"n8knjs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\index.js",[],["53","54"],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\App.js",["55"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Home from './components/pages/Home';\nimport Catalogue from './components/pages/Catalogue';\nimport TestGlasses from './components/pages/TestGlasses';\nimport Management from './components/pages/Management';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.scss';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\nexport default function App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <div className='Content'>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/probar' component={TestGlasses} />\n        {/* <Route exact path=\"/management\" component={Management} /> */}\n        <Route exact path=\"/catalogo\" component={Catalogue} />\n      </div>\n      <Footer />\n    </Router>\n  )\n};\n","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\TestGlasses.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Home.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Mounts.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\useEventListener.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Management.js",["56"],"import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport classnames from 'classnames';\r\nimport Slider from \"react-slick\";\r\n\r\nimport { validateToken, createGlasses, getAllGlasses, deleteGlasses } from '../utils/Actions';\r\n\r\nimport '../../css/Management.scss';\r\nimport UploadImg from '../../testPics/upload.png';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst Management = ({ location }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    // Validate access\r\n    const [error, setError] = useState('');\r\n    const [access, setAccess] = useState(false);\r\n    // Create glasses\r\n    const [createGlassesInfo, setCreateGlassesInfo] = useState({\r\n        brand: '',\r\n        color: 'no',\r\n        shape: 'no',\r\n        material: 'no',\r\n        price: ''\r\n    });\r\n    const [thumbs, setThumbs] = useState([]);\r\n    // Get all frame glasses\r\n    const [allGlasses, setAllGlasses] = useState([]);\r\n\r\n    const bestSellsSettings = {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        dots: true,\r\n        autoplay: true,\r\n        autoplaySpeed: 5000,\r\n        swipeToSlide: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = 'Admin section';\r\n        const token = new URLSearchParams(location.search).get('token');\r\n\r\n        (async () => {\r\n            const { validate } = await validateToken(token);\r\n\r\n            if (validate) {\r\n                setAccess(true);\r\n\r\n                const { stateAction, allGlasses } = await getAllGlasses();\r\n\r\n                if (stateAction) { setAllGlasses(allGlasses) }\r\n                else { setError('Error: Cargar monturas.') }\r\n\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setError('Error: No tienes acceso.');\r\n                setLoading(false);\r\n            }\r\n        })()\r\n\r\n        return () => { }\r\n    }, [location.search]);\r\n\r\n    const handleForm = e => {\r\n        const { id, value } = e.target;\r\n        setCreateGlassesInfo({ ...createGlassesInfo, [id]: value });\r\n    }\r\n\r\n    const handleUploadImages = e => {\r\n        setThumbs([...e.target.files].map(item => URL.createObjectURL(item)));\r\n    }\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Varify empty inputs\r\n        let emptyFields = false;\r\n\r\n        if (createGlassesInfo.brand.trim() === \"\" || createGlassesInfo.price === 0 || createGlassesInfo.color === \"no\"\r\n            || createGlassesInfo.material === \"no\" || createGlassesInfo.shape === \"no\") {\r\n            emptyFields = true;\r\n        }\r\n\r\n        if (emptyFields) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'No pueden haber campos vacíos o sin seleccionar.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const { stateAction, newGlasses /* newGlasses es solo el ID */ } = await createGlasses(createGlassesInfo);\r\n        setLoading(false);\r\n\r\n        if (stateAction) {\r\n            allGlasses.push(createGlassesInfo);\r\n\r\n            setCreateGlassesInfo({\r\n                brand: '',\r\n                color: 'no',\r\n                shape: 'no',\r\n                material: 'no',\r\n                price: ''\r\n            })\r\n\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n            }).fire({\r\n                icon: 'success',\r\n                title: `Mountura creada correctamente.`\r\n            });\r\n        }\r\n        else {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error inesperado, intentalo de nuevo.'\r\n            });\r\n        }\r\n    }\r\n\r\n    const onEdit = async currentGlasses => {\r\n\r\n    }\r\n\r\n    const onDelete = async currentGlasses => {\r\n        const { isConfirmed } = await MySwal.fire({\r\n            title: `¿Quieres eliminar \"${currentGlasses.brand}\"?`,\r\n            text: 'Esta acción no se puede deshacer.',\r\n            showCancelButton: true,\r\n            confirmButtonText: `Eliminar`,\r\n            cancelButtonText: `Cancelar`,\r\n            customClass: {\r\n                popup: 'px-0 modal-config',\r\n                header: 'align-items-start',\r\n                content: 'text-left',\r\n                actions: 'justify-content-end',\r\n                confirmButton: 'btn-confirm',\r\n                cancelButton: 'btn-cancel'\r\n            }\r\n        });\r\n\r\n        if (!isConfirmed) return;\r\n\r\n        setLoading(true);\r\n        const { stateAction } = await deleteGlasses(currentGlasses._id);\r\n        setLoading(false);\r\n\r\n        if (!stateAction) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error inesperado, intentalo de nuevo.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        Swal.mixin({\r\n            toast: true,\r\n            position: 'top',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n        }).fire({\r\n            icon: 'success',\r\n            title: `Mountura eliminada correctamente.`\r\n        });\r\n\r\n        setAllGlasses(prev => prev.filter(item => item._id !== currentGlasses._id));\r\n    }\r\n\r\n    const createGlassesSection = <div className=\"create secondary-font\">\r\n        <form className=\"container row mx-auto\" noValidate onSubmit={submitForm}>\r\n            <div className=\"col-12 col-md-6 col-lg-3\">\r\n                <label htmlFor=\"images\" className=\"upload-images\">\r\n                    <Slider {...bestSellsSettings} className=\"slider\">\r\n                        {thumbs.map((img, index) =>\r\n                            <span key={index}>\r\n                                <div className=\"thumbs\" style={{ backgroundImage: `url(${img})`, height: '100%' }} />\r\n                            </span>\r\n                        )}\r\n                    </Slider>\r\n                    <img src={UploadImg} alt=\"\" style={{ visibility: thumbs.length > 0 ? 'hidden' : 'visible' }} />\r\n                    <input type=\"file\" id=\"images\" accept=\"image/*\" multiple onChange={handleUploadImages} />\r\n                </label>\r\n            </div>\r\n            {/*  */}\r\n\r\n            <div className=\"row mx-0 col-12 col-md-6 col-lg-9\">\r\n                <div className=\"form-group brand col-12\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        style={{ borderColor: createGlassesInfo.brand ? '#56ab2f' : '#839192' }}\r\n                        id=\"brand\"\r\n                        type=\"text\"\r\n                        spellCheck=\"false\"\r\n                        autoFocus='1'\r\n                        value={createGlassesInfo.brand}\r\n                        onChange={handleForm} />\r\n                    <label\r\n                        className={classnames(\"placeholder\", { 'active': createGlassesInfo.brand })}\r\n                        htmlFor=\"brand\">\r\n                        Marca\r\n                </label>\r\n                </div>\r\n\r\n                <div className=\"form-group color col-12 col-lg-4\">\r\n                    <select\r\n                        className=\"custom-select\"\r\n                        style={{ borderColor: createGlassesInfo.color !== 'no' ? '#56ab2f' : '#839192' }}\r\n                        id='color'\r\n                        onChange={handleForm}>\r\n                        <option value=\"no\">Color</option>\r\n                        <option value=\"rojo\">Rojo</option>\r\n                        <option value=\"amarillo\">Amarillo</option>\r\n                        <option value=\"verde\">Verde</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group shape col-12 col-lg-4\">\r\n                    <select\r\n                        className=\"custom-select\"\r\n                        style={{ borderColor: createGlassesInfo.shape !== 'no' ? '#56ab2f' : '#839192' }}\r\n                        id='shape'\r\n                        onChange={handleForm}>\r\n                        <option value=\"no\">Forma</option>\r\n                        <option value=\"rectangular\">Rectangular</option>\r\n                        <option value=\"agatada\">Agatada</option>\r\n                        <option value=\"semiAgatada\">Semi-Agatada</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group material col-12 col-lg-4\">\r\n                    <select\r\n                        className=\"custom-select\"\r\n                        style={{ borderColor: createGlassesInfo.material !== 'no' ? '#56ab2f' : '#839192' }}\r\n                        id='material'\r\n                        onChange={handleForm}>\r\n                        <option value=\"no\">Material</option>\r\n                        <option value=\"plastico\">Plástico</option>\r\n                        <option value=\"aluminio\">Aluminio</option>\r\n                        <option value=\"acetato\">Acetato</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group price col-8\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        style={{ borderColor: createGlassesInfo.price ? '#56ab2f' : '#839192' }}\r\n                        id=\"price\"\r\n                        type=\"number\"\r\n                        spellCheck=\"false\"\r\n                        min=\"1\"\r\n                        value={createGlassesInfo.price}\r\n                        onChange={handleForm} />\r\n                    <label\r\n                        className={classnames(\"placeholder\", { 'active': createGlassesInfo.price })}\r\n                        htmlFor=\"price\">\r\n                        Precio (COP)\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"col-4 form-group\">\r\n                    <button className=\"btn btn-create\" type=\"submit\">\r\n                        Crear\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    const manageGlassesSection = <div className=\"all-glasses row mx-0\">\r\n        {allGlasses.map((frame, index) =>\r\n            <div key={index} className=\"frame col-6 col-md-4 col-lg-2\">\r\n                <span className=\"brand\">{frame.brand}</span>\r\n                <div className=\"thumb\"></div>\r\n                <span className=\"price\">${new Intl.NumberFormat(\"de-DE\").format(frame.price)}</span>\r\n\r\n                <div className=\"actions\">\r\n                    <span className=\"material-icons\" onClick={() => onEdit(frame)}>\r\n                        edit\r\n                    </span>\r\n                    <span className=\"material-icons\" onClick={() => onDelete(frame)}>\r\n                        delete\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )}\r\n    </div>\r\n\r\n    return (\r\n        <div className=\"Management principal-font\">\r\n            {loading &&\r\n                <div className=\"loading\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {error && <h1>{error}</h1>}\r\n\r\n            {access && <div>\r\n                <h5 className=\"title text-center mt-0\">Agregar montura</h5>\r\n                {createGlassesSection}\r\n                <h5 className=\"title text-center\">Gestionar mounturas</h5>\r\n                {manageGlassesSection}\r\n            </div>\r\n            }\r\n            <style type=\"text/css\">\r\n                {`\r\n                    .navbar, footer {display: none}\r\n                    .Content {margin-top: 0px;}\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Management;\r\n","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Consts.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Actions.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Catalogue.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":99,"column":30,"nodeType":"63","messageId":"64","endLine":99,"endColumn":40},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Management' is defined but never used.","Identifier","unusedVar","'newGlasses' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]