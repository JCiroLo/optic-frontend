[{"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\index.js":"1","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\App.js":"2","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\TestGlasses.js":"4","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Home.js":"5","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Mounts.js":"6","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\useEventListener.js":"7","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Management.js":"8","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Consts.js":"9","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Actions.js":"10","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Footer.js":"11","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Catalogue.js":"12","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Firebase.js":"13","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\LoadingScreen.js":"14","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Modal.js":"15","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Frame.js":"16","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\SlickCustomArrow.js":"17","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\DetailMount.js":"18"},{"size":231,"mtime":1615502763916,"results":"19","hashOfConfig":"20"},{"size":1308,"mtime":1619648588563,"results":"21","hashOfConfig":"20"},{"size":3222,"mtime":1619809648551,"results":"22","hashOfConfig":"20"},{"size":12997,"mtime":1619723380540,"results":"23","hashOfConfig":"20"},{"size":5775,"mtime":1619647027892,"results":"24","hashOfConfig":"20"},{"size":3788,"mtime":1619727853410,"results":"25","hashOfConfig":"20"},{"size":728,"mtime":1611271075697,"results":"26","hashOfConfig":"20"},{"size":18829,"mtime":1618172025255,"results":"27","hashOfConfig":"20"},{"size":62,"mtime":1619812634580,"results":"28","hashOfConfig":"20"},{"size":1170,"mtime":1619648939981,"results":"29","hashOfConfig":"20"},{"size":4958,"mtime":1613936067956,"results":"30","hashOfConfig":"20"},{"size":5498,"mtime":1619653390343,"results":"31","hashOfConfig":"20"},{"size":483,"mtime":1611500903331,"results":"32","hashOfConfig":"20"},{"size":308,"mtime":1618874494672,"results":"33","hashOfConfig":"20"},{"size":1381,"mtime":1618864941904,"results":"34","hashOfConfig":"20"},{"size":847,"mtime":1619808362655,"results":"35","hashOfConfig":"20"},{"size":536,"mtime":1618867140667,"results":"36","hashOfConfig":"20"},{"size":5135,"mtime":1619808737352,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"n8knjs",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\index.js",[],["76","77"],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\App.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Navbar.js",["78"],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\TestGlasses.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Home.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Mounts.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\useEventListener.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Management.js",["79"],"import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport classnames from 'classnames';\r\nimport Slider from 'react-slick';\r\nimport Modal from '../layout/Modal';\r\n\r\nimport { validateToken, createGlasses, getAllGlasses, deleteGlasses } from '../utils/Actions';\r\nimport { storage } from '../utils/Firebase';\r\nimport LoadingScreen from '../layout/LoadingScreen';\r\n\r\nimport '../../css/Management.scss';\r\nimport UploadImg from '../../testPics/upload.png';\r\n\r\nconst Management = ({ location }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    // Validate access\r\n    const [error, setError] = useState('');\r\n    const [access, setAccess] = useState(false);\r\n    // Create glasses\r\n    const [createGlassesInfo, setCreateGlassesInfo] = useState({\r\n        brand: '', color: 'no', shape: 'no', material: 'no', price: ''\r\n    });\r\n    const [uploadProgress, setUploadProgress] = useState({\r\n        model: 0, testing: 0, status: false\r\n    });\r\n    const [thumbs, setThumbs] = useState([]);\r\n    // Editing glasses\r\n    const [editGlassesInfo, seteditGlassesInfo] = useState({})\r\n    // Deleting glasses\r\n    const [deleteGlassesInfo, setDeleteGlassesInfo] = useState({})\r\n    // Get all frame glasses\r\n    const [allGlasses, setAllGlasses] = useState([]);\r\n    // Modals\r\n    const [stateModals, toggleStateModals] = useState({ 'create': false, 'edit': false, 'delete': false });\r\n\r\n    const bestSellsSettings = {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        dots: true,\r\n        autoplay: true,\r\n        autoplaySpeed: 5000,\r\n        swipeToSlide: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = 'Admin section';\r\n        const token = new URLSearchParams(location.search).get('token');\r\n\r\n        (async () => {\r\n            const { validate } = await validateToken(token);\r\n\r\n            if (validate) {\r\n                setAccess(true);\r\n\r\n                const { stateAction, allGlasses } = await getAllGlasses();\r\n\r\n                if (stateAction) { setAllGlasses(allGlasses) }\r\n                else { setError('Error: Cargar monturas.') }\r\n\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setError('Error: No tienes acceso.');\r\n                setLoading(false);\r\n            }\r\n        })()\r\n\r\n        return () => { }\r\n    }, [location.search]);\r\n\r\n    const handleCreateForm = e => {\r\n        const { id, value } = e.target;\r\n        setCreateGlassesInfo({ ...createGlassesInfo, [id]: value });\r\n    }\r\n\r\n    const handleUploadImages = e => {\r\n        const { files } = e.target;\r\n\r\n        if (files.length < 2) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'Te falta otra imagen.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (files.length > 2) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'No puedes subir mas de 2 imagenes.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        setThumbs([...files]);\r\n    }\r\n\r\n    const openModal = (type, param) => {\r\n        if (type === 'create') {\r\n            toggleStateModals({ 'create': true, 'edit': false, 'delete': false });\r\n        }\r\n        else if (type === 'edit') {\r\n            toggleStateModals({ 'create': false, 'edit': true, 'delete': false });\r\n        }\r\n        else if (type === 'delete') {\r\n            toggleStateModals({ 'create': false, 'edit': false, 'delete': true });\r\n            setDeleteGlassesInfo(param)\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        toggleStateModals({ 'create': false, 'edit': false, 'delete': false });\r\n    }\r\n\r\n    const onCreate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Varify empty inputs\r\n        let emptyFields = false;\r\n\r\n        if (createGlassesInfo.brand.trim() === \"\" || createGlassesInfo.price === 0 || createGlassesInfo.color === \"no\"\r\n            || createGlassesInfo.material === \"no\" || createGlassesInfo.shape === \"no\") {\r\n            emptyFields = true;\r\n        }\r\n\r\n        if (emptyFields) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'No pueden haber campos vacíos o sin seleccionar.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (thumbs.length === 0) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'No has seleccionado imagenes.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        closeModal();\r\n        const { /* stateAction */newGlasses } = await createGlasses(createGlassesInfo);\r\n\r\n        setLoading(false);\r\n\r\n        await uploadFiles(newGlasses);\r\n\r\n        allGlasses.push({ ...createGlassesInfo, _id: newGlasses });\r\n\r\n        // Reset values\r\n        setCreateGlassesInfo({\r\n            brand: '',\r\n            color: 'no',\r\n            shape: 'no',\r\n            material: 'no',\r\n            price: ''\r\n        });\r\n\r\n        setThumbs([]);\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        setUploadProgress({ status: false, model: 0, testing: 0 })\r\n\r\n        Swal.mixin({\r\n            toast: true,\r\n            position: 'top',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n        }).fire({\r\n            icon: 'success',\r\n            title: `Mountura creada correctamente.`\r\n        });\r\n    }\r\n\r\n    const uploadModelFile = id => {\r\n        return new Promise(resolve => {\r\n            const taskModel = storage.child(`/${id}_model.png`).put(thumbs[0]);\r\n            taskModel.on('state_changed',\r\n                (snapshot) => {\r\n                    setUploadProgress({\r\n                        ...uploadProgress,\r\n                        status: true,\r\n                        model: Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n                    })\r\n                }, (error) => {\r\n                    console.log(error.message);\r\n                }, () => {\r\n                    resolve()\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const uploadTestingFile = id => {\r\n        return new Promise(resolve => {\r\n            const taskModel = storage.child(`/${id}_testing.png`).put(thumbs[1]);\r\n            taskModel.on('state_changed',\r\n                (snapshot) => {\r\n                    setUploadProgress({\r\n                        ...uploadProgress,\r\n                        status: true,\r\n                        model: 100,\r\n                        testing: Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\r\n                    })\r\n                }, (error) => {\r\n                    console.log(error.message);\r\n                }, () => {\r\n                    resolve()\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const uploadFiles = async id => {\r\n        await uploadModelFile(id);\r\n        await uploadTestingFile(id);\r\n    }\r\n\r\n    const onEdit = async currentGlasses => {\r\n\r\n    }\r\n\r\n    const onDelete = async currentGlasses => {\r\n        setLoading(true);\r\n        const { stateAction } = await deleteGlasses(currentGlasses._id);\r\n        try {\r\n            await storage.child(`${currentGlasses._id}_model.png`).delete();\r\n            await storage.child(`${currentGlasses._id}_testing.png`).delete();\r\n        }\r\n        catch (e) {\r\n            console.log('Esta montura no tenía imagen.')\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        if (!stateAction) {\r\n            Swal.mixin({\r\n                toast: true,\r\n                position: 'top',\r\n                showConfirmButton: true\r\n            }).fire({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error inesperado, intentalo de nuevo.'\r\n            });\r\n            return;\r\n        }\r\n\r\n        Swal.mixin({\r\n            toast: true,\r\n            position: 'top',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n        }).fire({\r\n            icon: 'success',\r\n            title: `Mountura eliminada correctamente.`\r\n        });\r\n\r\n        setAllGlasses(prev => prev.filter(item => item._id !== currentGlasses._id));\r\n        closeModal();\r\n    }\r\n\r\n    const createGlassesSection =\r\n        <div className=\"create secondary-font\">\r\n            <form className=\"container row mx-auto\" noValidate>\r\n                <div className=\"col-12 col-md-6 col-lg-3\">\r\n                    <label htmlFor=\"images\" className=\"upload-images\">\r\n                        <Slider {...bestSellsSettings} className=\"slider\">\r\n                            {thumbs.map(item => URL.createObjectURL(item)).map((img, index) =>\r\n                                <span key={index}>\r\n                                    <div className=\"thumbs\" style={{ backgroundImage: `url(${img})`, height: '100%' }} />\r\n                                </span>\r\n                            )}\r\n                        </Slider>\r\n                        <img src={UploadImg} alt=\"\" style={{ visibility: thumbs.length > 0 ? 'hidden' : 'visible' }} />\r\n                        <input type=\"file\" id=\"images\" accept=\"image/*\" multiple onChange={handleUploadImages} />\r\n                    </label>\r\n                </div>\r\n                <div className=\"inputs row mx-0 col-12 col-md-6 col-lg-9\">\r\n                    <div className=\"form-group brand col-12\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            style={{ borderColor: createGlassesInfo.brand ? '#56ab2f' : '#839192' }}\r\n                            id=\"brand\"\r\n                            type=\"text\"\r\n                            spellCheck=\"false\"\r\n                            autoFocus='1'\r\n                            value={createGlassesInfo.brand}\r\n                            onChange={handleCreateForm} />\r\n                        <label\r\n                            className={classnames(\"placeholder\", { 'active': createGlassesInfo.brand })}\r\n                            htmlFor=\"brand\">\r\n                            Marca\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group color col-12 col-lg-4\">\r\n                        <select\r\n                            className=\"custom-select\"\r\n                            style={{ borderColor: createGlassesInfo.color !== 'no' ? '#56ab2f' : '#839192' }}\r\n                            id='color'\r\n                            onChange={handleCreateForm}>\r\n                            <option value=\"no\">Color</option>\r\n                            <option value=\"rojo\">Rojo</option>\r\n                            <option value=\"amarillo\">Amarillo</option>\r\n                            <option value=\"verde\">Verde</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group shape col-12 col-lg-4\">\r\n                        <select\r\n                            className=\"custom-select\"\r\n                            style={{ borderColor: createGlassesInfo.shape !== 'no' ? '#56ab2f' : '#839192' }}\r\n                            id='shape'\r\n                            onChange={handleCreateForm}>\r\n                            <option value=\"no\">Forma</option>\r\n                            <option value=\"rectangular\">Rectangular</option>\r\n                            <option value=\"agatada\">Agatada</option>\r\n                            <option value=\"semiAgatada\">Semi-Agatada</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group material col-12 col-lg-4\">\r\n                        <select\r\n                            className=\"custom-select\"\r\n                            style={{ borderColor: createGlassesInfo.material !== 'no' ? '#56ab2f' : '#839192' }}\r\n                            id='material'\r\n                            onChange={handleCreateForm}>\r\n                            <option value=\"no\">Material</option>\r\n                            <option value=\"plastico\">Plástico</option>\r\n                            <option value=\"aluminio\">Aluminio</option>\r\n                            <option value=\"acetato\">Acetato</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group price col-12\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            style={{ borderColor: createGlassesInfo.price ? '#56ab2f' : '#839192' }}\r\n                            id=\"price\"\r\n                            type=\"number\"\r\n                            spellCheck=\"false\"\r\n                            min=\"1\"\r\n                            value={createGlassesInfo.price}\r\n                            onChange={handleCreateForm} />\r\n                        <label\r\n                            className={classnames(\"placeholder\", { 'active': createGlassesInfo.price })}\r\n                            htmlFor=\"price\">\r\n                            Precio (COP)\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    return (\r\n        <div className=\"Management principal-font\">\r\n            <div className=\"modals secondary-font\">\r\n                <Modal show={stateModals.create} >\r\n                    <div type='title'>Agregar montura</div>\r\n                    <div type='body'>{createGlassesSection}</div>\r\n                    <button type='action' className=\"confirm\" onClick={onCreate}>\r\n                        Crear\r\n                    </button>\r\n                    <button type='action' className=\"cancel\" onClick={closeModal}>\r\n                        Cancelar\r\n                    </button>\r\n                </Modal>\r\n\r\n                <Modal show={stateModals.edit} >\r\n                    <div type='title'>Editando \"{editGlassesInfo.brand}\"</div>\r\n                    <div type='body'>Esta acción no se podrá revertir en el futuro.</div>\r\n                    <button type='action' className=\"confirm\" onClick={() => onDelete(deleteGlassesInfo)}>\r\n                        Eliminar\r\n                    </button>\r\n                    <button type='action' className=\"cancel\" onClick={closeModal}>\r\n                        Cancelar\r\n                    </button>\r\n                </Modal>\r\n\r\n                <Modal show={stateModals.delete} >\r\n                    <div type='title'>¿Estas seguro que deseas eliminar \"{deleteGlassesInfo.brand}\" ?</div>\r\n                    <div type='body'>Esta acción no se podrá revertir en el futuro.</div>\r\n                    <button type='action' className=\"confirm\" onClick={() => onDelete(deleteGlassesInfo)}>\r\n                        Eliminar\r\n                    </button>\r\n                    <button type='action' className=\"cancel\" onClick={closeModal}>\r\n                        Cancelar\r\n                    </button>\r\n                </Modal>\r\n\r\n                <Modal show={uploadProgress.status}>\r\n                    <div type='title'></div>\r\n                    <div type='body'>\r\n                        <div className=\"uploading-progress secondary-font\">\r\n                            <h2>Creando montura</h2>\r\n                            <div className=\"progress\">\r\n                                <div\r\n                                    className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                                    role=\"progressbar\"\r\n                                    aria-valuenow={((uploadProgress.model / 2) + (uploadProgress.testing / 2))}\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"100\"\r\n                                    style={{ width: `${((uploadProgress.model / 2) + (uploadProgress.testing / 2))}%` }}\r\n                                />\r\n                            </div>\r\n                            <small className=\"mt-2\"><h4>{((uploadProgress.model / 2) + (uploadProgress.testing / 2))}%</h4></small>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n            {loading &&\r\n                <LoadingScreen />\r\n            }\r\n\r\n            {error && <h1>{error}</h1>}\r\n\r\n            {access && <>\r\n                <h5 className=\"title text-center\">Gestionar mounturas</h5>\r\n                <div className=\"manage-actions secondary-font\">\r\n                    <button className=\"btn\" onClick={() => openModal('create')}>\r\n                        <span className=\"material-icons\">\r\n                            add\r\n                    </span> Agregar montura\r\n                </button>\r\n                    <button className=\"btn\">\r\n                        <span className=\"material-icons\">\r\n                            insert_link\r\n                    </span> Otra acción\r\n                </button>\r\n                </div>\r\n                <div className=\"row mx-0\">\r\n                    {allGlasses.map((frame, index) =>\r\n                        <div key={index} className=\"frame col-6 col-md-4 col-lg-2\">\r\n                            <span className=\"brand\">{frame.brand}</span>\r\n                            <div className=\"thumb\" style={{ backgroundImage: `url(https://firebasestorage.googleapis.com/v0/b/optica-809a9.appspot.com/o/${frame._id}_model.png?alt=media&token=2cc6b58c-a5fe-4688-83eb-8f0337e2e7cc)` }}></div>\r\n                            <span className=\"price\">${new Intl.NumberFormat(\"de-DE\").format(frame.price)}</span>\r\n\r\n                            <div className=\"actions\">\r\n                                <span className=\"material-icons\" onClick={() => onEdit(frame)}>\r\n                                    edit\r\n                            </span>\r\n                                <span className=\"material-icons\" onClick={() => openModal('delete', frame)}>\r\n                                    delete\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n            }\r\n            <style type=\"text/css\">\r\n                {`\r\n                    footer {display: none}\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Management;\r\n","C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Consts.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Actions.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\Catalogue.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\utils\\Firebase.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\LoadingScreen.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Modal.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\Frame.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\layout\\SlickCustomArrow.js",[],"C:\\Users\\Juan Pablo\\Desktop\\Optica\\frontend\\src\\components\\pages\\DetailMount.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":28,"column":29,"nodeType":"87","messageId":"88","endLine":28,"endColumn":47},{"ruleId":"90","severity":1,"message":"91","line":36,"column":8,"nodeType":"92","endLine":36,"endColumn":10,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'seteditGlassesInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [id]",{"range":"99","text":"100"},[1177,1179],"[id]"]